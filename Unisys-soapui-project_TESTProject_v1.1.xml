<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4f6d5c1d-2700-49a9-bd59-3fdeab9a3e05" activeEnvironment="Default" name="Unisys" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" resourceRoot="${projectDir}" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="916c6d8a-35c5-4370-b941-e5a7c534dd48" wadlVersion="http://wadl.dev.java.net/2009/02" name="" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://LT-34679A:8089/</con:endpoint></con:endpoints><con:resource name="Create" path="" id="81dc3f14-e42e-4e02-adf5-f72f6d2a37d8"><con:settings/><con:parameters/><con:method name="Create" id="0cbaeaad-5f3d-4888-bd8b-1fd574894221" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html; charset=iso-8859-1</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:cre="http://localhost/Create">cre:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>404 401 400 415 417</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:cre="http://localhost/Create">cre:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>applicaiton/JSON</con:mediaType><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=UTF-8</con:mediaType><con:status>401 404</con:status><con:params/><con:element>Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json;charset=ISO-8859-1</con:mediaType><con:status>401 417</con:status><con:params/><con:element xmlns:ret="http://hseau269-lmsfwd.uesc.com/lms-adapter/allotment/flight/retrieve">ret:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>200</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="5f2cb613-8704-4b91-95ba-ac8923505806" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://LT-34679A:8089</con:endpoint><con:request>{
  "service": {
    "servicename": "WTX_SERV_ECIBOK"
  },
  "airwaybillNumberDto": {
    "airlineCodeNbr": "777",
    "shipmentReference": " ${#TestCase#shipmentReference}",
    "uldInputRequired": false,
    "checkPrintTransferManifest": false
  },
  "airwaybillType": "AWB",
  "bookingIndicator": false,
  "checkAWBStockIndicator": false,
  "houseAWBNotReqdIndicator": false,
  "houseGoodRetrieveIndicator": false,
  "foundCargoRequest": false,
  "overrideIndicator": false,
  "flightToBeFinalized": false,
  "oId": "01004575001",
  "version": "2",
  "requestType": "FIND",
  "serviceName": "WTX_SERV_ECIBOK",
  "requestHeader": {
    "channel": "G",
    "groupId": "Z",
    "host": "UW",
    "office": "001",
    "source": "BookingService",
    "station": "MSP",
    "stationVolumeUnit": "MC",
    "stationWeightUnit": "KG",
    "agentId": "115",
    "mockFlag": false
  }
}</con:request><con:originalUri>http://localhost/Create</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Method 2" id="e1453bc9-48a8-4d74-a449-ccb3a8c07ab6" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" id="a3cc4d18-0a8e-4439-bbb1-a250fee7109e" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://LT-34679A:8089/</con:endpoint><con:request>{
  "service": {
    "servicename": "WTX_SERV_ECIBOK"
  },
  "airwaybillNumberDto": {
    "airlineCodeNbr": "${#TestCase#txt_ACN}",
    "shipmentReference": "00005051",
    "uldInputRequired": false,
    "checkPrintTransferManifest": false
  },
  "airwaybillType": "AWB",
  "bookingIndicator": false,
  "checkAWBStockIndicator": false,
  "houseAWBNotReqdIndicator": false,
  "houseGoodRetrieveIndicator": false,
  "foundCargoRequest": false,
  "overrideIndicator": false,
  "flightToBeFinalized": false,
  "oId": "01004575001",
  "version": "2",
  "requestType": "FIND",
  "serviceName": "WTX_SERV_ECIBOK",
  "requestHeader": {
    "channel": "G",
    "groupId": "Z",
    "host": "UW",
    "office": "001",
    "source": "BookingService",
    "station": "MSP",
    "stationVolumeUnit": "MC",
    "stationWeightUnit": "KG",
    "agentId": "115",
    "mockFlag": false
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="e9c3518c-c183-4c60-82c1-76d4db9571cc" wadlVersion="http://wadl.dev.java.net/2009/02" name="Unisys" type="rest" definitionUrl="rate" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints/></con:interface><con:testSuite id="6b6ba466-7aaa-4d8f-b9aa-b98358d78d2f" name="TESTProject"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="0f717403-07a1-4bca-8c54-0703bf24732c" failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TESTProject" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GenerateToken" id="8f451155-737c-4247-bcce-803c2d80dde8"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GenerateToken" id="ecdbcde9-f422-41ec-96a4-3bd71886ac20" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP1}</con:endpoint><con:request/><con:originalUri>https://uwsqa.uesc.com/ReactTestTkn.asp</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PT_Token" id="7ca1cfcf-87cd-4bdd-86e3-4073531c493d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>Token</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>GenerateToken</con:sourceStep><con:sourcePath>$.Token</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>AccessToken</con:targetStep><con:targetPath>$.token</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="AccessToken" id="79a750d5-23e6-447f-886d-7d567e77165b"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="AccessToken" id="43874b21-c5d1-4a84-97c7-a01bce6dcad9" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP2}</con:endpoint><con:request>{
   "station": "${#TestCase#txt_Station}",
   "tenant": "${#TestCase#txt_tenant}",
   "username": "${#TestCase#txt_Userid}",
   "token": "SkRYW1pcTFpQU106PUFBQz0/QVVOQUtbXVJDPjY4ODI4OTlDVltXPTkwOUFdYA=="
}</con:request><con:originalUri>http://hseau269-lmsfwd.uesc.com/lms-auth-service/api/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="PT_AccessToken" id="97aef670-f595-4f11-8eef-02effdcd5176"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>AccessToken</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>AccessToken</con:sourceStep><con:sourcePath>$.accessToken</con:sourcePath><con:targetType>Authorization</con:targetType><con:targetStep>#TestCase#</con:targetStep><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="S001_ContainerInfo_Retrieve" id="97ee4a2b-33ae-4b0e-a3de-2961ecd4423c"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="S001_ContainerInfo_Retrieve" id="7c17e2e6-e7fb-4718-a21d-e2f19abb4eb6" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#Authorization}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP}</con:endpoint><con:request>{
  "requestType": "RETRIEVE",
  "requestHeader": {
    "office":"${#TestCase#txt_Office}",
    "station":"${#TestCase#txt_Station}",
    "userId":"${#TestCase#txt_Userid}"
  },
  "containerId":"${#TestCase#txt_containerId}"
}</con:request><con:originalUri>http://hseau269-lmsfwd.uesc.com/lms-adapter/allotment/flight/retrieve</con:originalUri><con:assertion type="Simple Contains" id="8f84b100-83c2-485f-9d14-e8703beefaa0" name="Contains"><con:configuration><token>containerId</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" id="b3094920-6d5e-4b25-b7ad-ab037d991402" name="VerifyStationInfo"><con:configuration><token>containerDtos</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="S002_ContainerInfo_Retrieve_Error" id="e95737e8-9768-42e7-83b5-c1f400751082"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="S002_ContainerInfo_Retrieve_Error" id="62c35563-c705-4134-8c92-ee079f2d4bcd" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#Authorization}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP}</con:endpoint><con:request>{
  "requestType": "RETRIEVE",
  "requestHeader": {
    "office":"${#TestCase#txt_Office}",
    "station":"${#TestCase#txt_Station}",
    "userId":"${#TestCase#txt_Userid}"
  },
  "containerId":"${#TestCase#txt_InvalidULDIdentifier}"
}</con:request><con:originalUri>https://uwsqa.uesc.com/lms-adapter/allotment/flight/retrieve</con:originalUri><con:assertion type="Simple Contains" id="c89cc5c3-ece3-49f1-9098-9831326354a6" name="VerifyErrorMessage"><con:configuration><token>CTNR</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="S003_ContainerInfo_retrieve_InvalidToken" id="00d65436-4df0-4362-97c5-8ea428d9c5db"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="S003_ContainerInfo_retrieve_InvalidToken" id="7f409acd-ec93-4ccb-87a3-71f10967c6e5" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP}</con:endpoint><con:request>{
  "requestType": "RETRIEVE",
  "requestHeader": {
    "office":"${#TestCase#txt_Office}",
    "station":"${#TestCase#txt_Station}",
    "userId":"${#TestCase#txt_Userid}"
  },
  "containerId":"${#TestCase#txt_containerId}"
}</con:request><con:originalUri>http://hseau269-lmsfwd.uesc.com/lms-adapter/allotment/flight/retrieve</con:originalUri><con:assertion type="Simple Contains" id="ab06c12a-e0e2-40c9-8714-aa49f2307428" name="Contains"><con:configuration><token>JWT strings must contain exactly 2 period characters. Found: 0</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="S004_ContainerInfo_retrieve_WithoutBearer" id="3013ebbf-4e3c-4b41-b9c6-71c9a9f7cdad"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="S004_ContainerInfo_retrieve_WithoutBearer" id="3e6a7cca-c262-4ff4-9c0c-c69d2ec04246" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="eyJ0eXAiOiJKV1QiLCJhbGciOiJI" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP}</con:endpoint><con:request>{
  "requestType": "RETRIEVE",
  "requestHeader": {
    "office":"${#TestCase#txt_Office}",
    "station":"${#TestCase#txt_Station}",
    "userId":"${#TestCase#txt_Userid}"
  },
  "containerId":"${#TestCase#txt_containerId}"
}</con:request><con:originalUri>https://uwsqa.uesc.com/lms-adapter/allotment/flight/retrieve</con:originalUri><con:assertion type="Simple Contains" id="6d949f77-34a8-4437-9023-88a406c18994" name="Contains"><con:configuration><token>JWT Token does not begin with Bearer String</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="S005_ContainerInfo_retrieve_AuthorizationException" id="33e4f1a4-bd12-41f4-9e71-c05b31f84f51"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="S005_ContainerInfo_retrieve_AuthorizationException" id="bd455353-f816-48bd-b296-0a2d77a1c516" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${#TestCase#Authorization}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP}</con:endpoint><con:request>{
  "requestType": "RETRIEVE",
  "requestHeader": {
    "office":"${#TestCase#txt_Office}",
    "station":"${#TestCase#txt_Station}",
    "userId":"X315165"
  },
  "containerId":"${#TestCase#txt_containerId}"
}</con:request><con:originalUri>https://uwsqa.uesc.com/lms-adapter/allotment/flight/retrieve</con:originalUri><con:assertion type="Simple Contains" id="e1b25cbd-1217-460c-8549-1426d473a93e" name="Contains"><con:configuration><token>Invalid token</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="S006_ContainerInfo_retrieve_ExpiredToken" id="672a5fd3-a66f-4c32-a4d0-f2c5d8b266c9"><con:settings/><con:config service="" methodName="Create" resourcePath="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="S006_ContainerInfo_retrieve_ExpiredToken" id="8efe87c6-c681-4b20-b7c4-2df6683c423f" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJQcm9maWxlSWQiOiJaUyIsIkFsbG93ZWQgU3RhdGlvbnMiOlsiQUxMIl0sInN1YiI6IlgyNzI1MjMiLCJUZW5hbnQiOiJVVyIsIlBhcmFtZXRlcnMiOnsiRVMkQlBNX0FGVEVSX0dPT0RTX0FDQ0VQVEFOQ0UiOiJZIiwiRVMkQlBNX0JFRk9SRV9HT09EU19BQ0NFUFRBTkNFIjoiWSJ9LCJNZW51IEFjY2VzcyBQZXJtaXNzaW9ucyI6WzIsMiwyLDIsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDAsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMCwyLDIsMCwwLDIsMiwwLDAsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwwLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwwLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwwLDAsMiwwLDAsMiwyLDAsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMCwyLDIsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDIsMCwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMCwyLDIsMiwyXSwiaXNzIjoiaHR0cHM6Ly91d3NxYS51ZXNjLmNvbSIsIkFnZW50SWQiOiIxMTUiLCJleHAiOjE2MDE5ODIyNzAsImlhdCI6MTYwMTk2Nzg3MCwiUmVzdHJpY3Rpb25zIjoiMDAwMDAwMDAiLCJVc2VyTGV2ZWxzIjoiWVlZWVlZWVlOTllOIn0.R5ezLECN-lasTUVuu72vsmCa8aLDunHzrT95CBV2q_-mIgjOZeKUF5mecGOeLQntO31VWqC9kaR5IBXowu0g" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#TestCase#EnvironmentIP}</con:endpoint><con:request>{
  "requestType": "RETRIEVE",
  "requestHeader": {
    "office":"${#TestCase#txt_Office}",
    "station":"${#TestCase#txt_Station}",
    "userId":"${#TestCase#txt_Userid}"
  },
  "containerId":"${#TestCase#txt_containerId}"
}</con:request><con:originalUri>http://hseau269-lmsfwd.uesc.com/lms-adapter/allotment/Participant/retrieve</con:originalUri><con:assertion type="Simple Contains" id="c98a29ff-97a2-42f2-9ec3-f598314238f5" name="Contains"><con:configuration><token>JWT validity cannot be asserted and should not be trusted</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:setupScript>import org.apache.poi.hssf.usermodel.*;

//Create data formatter
dFormatter = new HSSFDataFormatter()

//Create a new workbook using POI API
srcBook = new HSSFWorkbook(new FileInputStream(new File("D:\\SmartBear\\SoapUI-5.5.0\\bin\\test-assets\\input-testdata\\TESTProject\\TESTProject.xls")))

//Create formula evaluator to handle formula cells
fEval = new HSSFFormulaEvaluator(srcBook)

//Get first sheet of the workbook (assumes data is on first sheet)
sourceSheet = srcBook.getSheetAt(0)

//Read in the contents of the txt_Userid
sourceRow = sourceSheet.getRow(4)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("txt_Userid",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the txt_Office
sourceRow = sourceSheet.getRow(5)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("txt_Office",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the txt_Station
sourceRow = sourceSheet.getRow(6)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("txt_Station",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the txt_Agentid
sourceRow = sourceSheet.getRow(7)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("txt_Agentid",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the EnvironmentIP
sourceRow = sourceSheet.getRow(3)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("EnvironmentIP",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the txt_containerId
sourceRow = sourceSheet.getRow(8)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("txt_containerId",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the Authorization
sourceRow = sourceSheet.getRow(9)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("Authorization",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the EnvironmentIP1
sourceRow = sourceSheet.getRow(10)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("EnvironmentIP1",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the EnvironmentIP2
sourceRow = sourceSheet.getRow(11)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("EnvironmentIP2",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the txt_tenant
sourceRow = sourceSheet.getRow(12)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("txt_tenant",dFormatter.formatCellValue(elNameCell,fEval))

//Read in the contents of the txt_InvalidULDIdentifier
sourceRow = sourceSheet.getRow(13)
elNameCell = sourceRow.getCell(1)
testCase.setPropertyValue("txt_InvalidULDIdentifier",dFormatter.formatCellValue(elNameCell,fEval))
</con:setupScript><con:properties><con:property><con:name>txt_Userid</con:name><con:value>ADPTRSCRIPT</con:value></con:property><con:property><con:name>txt_Office</con:name><con:value>001</con:value></con:property><con:property><con:name>txt_Station</con:name><con:value>MSP</con:value></con:property><con:property><con:name>txt_Agentid</con:name><con:value>115</con:value></con:property><con:property><con:name>Authorization</con:name><con:value/></con:property><con:property><con:name>txt_containerId</con:name><con:value>AKE1214UW</con:value></con:property><con:property><con:name>EnvironmentIP</con:name><con:value>http://hseau269-lmsfwd.uesc.com/lms-adapter/containerInfo/retrieve</con:value></con:property><con:property><con:name>EnvironmentIP1</con:name><con:value>https://uwsqa.uesc.com/ReactTestTkn.asp</con:value></con:property><con:property><con:name>EnvironmentIP2</con:name><con:value>http://hseau269-lmsfwd.uesc.com/lms-auth-service/api/login</con:value></con:property><con:property><con:name>txt_tenant</con:name><con:value>UW</con:value></con:property><con:property><con:name>txt_InvalidULDIdentifier</con:name><con:value>$%AGHJ</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>Authorization</con:name><con:value>Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJQcm9maWxlSWQiOiJaUyIsIkFsbG93ZWQgU3RhdGlvbnMiOlsiQUxMIl0sInN1YiI6IlgyNzI1MjMiLCJUZW5hbnQiOiJVVyIsIlBhcmFtZXRlcnMiOnsiRVMkQlBNX0FGVEVSX0dPT0RTX0FDQ0VQVEFOQ0UiOiJZIiwiRVMkQlBNX0JFRk9SRV9HT09EU19BQ0NFUFRBTkNFIjoiWSJ9LCJNZW51IEFjY2VzcyBQZXJtaXNzaW9ucyI6WzIsMiwyLDIsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDAsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMCwyLDIsMCwwLDIsMiwwLDAsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwwLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwwLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwwLDAsMiwwLDAsMiwyLDAsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMCwyLDIsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDIsMCwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMCwyLDIsMiwyXSwiaXNzIjoiaHR0cHM6Ly91d3NxYS51ZXNjLmNvbSIsIkFnZW50SWQiOiIxMTUiLCJleHAiOjE2MDE0NzI1MTIsImlhdCI6MTYwMTQ1ODExMiwiUmVzdHJpY3Rpb25zIjoiMDAwMDAwMDAiLCJVc2VyTGV2ZWxzIjoiWVlZWVlZWVlOTllOIn0.SPlgWiH3MHUPq2re9hInzQFVNoN1VjBkiUUQ0XSlhE0QwnFkaBIkZEEi3H5NpNwwd1SnYOGioOo1fl85PV-Wfw</con:value></con:property><con:property><con:name>CECIBOKEnivonmentIP</con:name><con:value>https://uwsqa.uesc.com/lms-adapter/booking/create</con:value></con:property><con:property><con:name>txt_Userid</con:name><con:value/></con:property><con:property><con:name>txt_Office</con:name><con:value/></con:property><con:property><con:name>txt_Station</con:name><con:value/></con:property><con:property><con:name>txt_Agentid</con:name><con:value/></con:property><con:property><con:name>txt_Origin</con:name><con:value/></con:property><con:property><con:name>txt_Destination</con:name><con:value/></con:property><con:property><con:name>txt_email</con:name><con:value/></con:property><con:property><con:name>txt_remarksType</con:name><con:value/></con:property><con:property><con:name>txt_declaredValue</con:name><con:value/></con:property><con:property><con:name>txt_dimensionalWeightOfShipment</con:name><con:value/></con:property><con:property><con:name>txt_dimensionalVolume</con:name><con:value/></con:property><con:property><con:name>txt_dimensionalVolumeUnit</con:name><con:value/></con:property><con:property><con:name>txt_exportPaycode</con:name><con:value/></con:property><con:property><con:name>txt_shipmentWeightUnit</con:name><con:value/></con:property><con:property><con:name>txt_volumeEvaluationMethod</con:name><con:value/></con:property><con:property><con:name>txt_SaccountNumber</con:name><con:value/></con:property><con:property><con:name>txt_Saddress</con:name><con:value/></con:property><con:property><con:name>txt_Scity</con:name><con:value/></con:property><con:property><con:name>txt_Scountry</con:name><con:value/></con:property><con:property><con:name>txt_Sphone</con:name><con:value/></con:property><con:property><con:name>txt_SpostalCode</con:name><con:value/></con:property><con:property><con:name>txt_Sstate</con:name><con:value/></con:property><con:property><con:name>txt_Shipper</con:name><con:value/></con:property><con:property><con:name>txt_SOID</con:name><con:value/></con:property><con:property><con:name>txt_SidentificationCode</con:name><con:value/></con:property><con:property><con:name>txt_SaeoNumber</con:name><con:value/></con:property><con:property><con:name>txt_ScontactName</con:name><con:value/></con:property><con:property><con:name>txt_ScontactPhone</con:name><con:value/></con:property><con:property><con:name>txt_CaccountNumber</con:name><con:value/></con:property><con:property><con:name>txt_Caddress</con:name><con:value/></con:property><con:property><con:name>txt_Ccity</con:name><con:value/></con:property><con:property><con:name>txt_Ccountry</con:name><con:value/></con:property><con:property><con:name>txt_Cphone</con:name><con:value/></con:property><con:property><con:name>txt_CpostalCode</con:name><con:value/></con:property><con:property><con:name>txt_Cstate</con:name><con:value/></con:property><con:property><con:name>txt_Consignee</con:name><con:value/></con:property><con:property><con:name>txt_COID</con:name><con:value/></con:property><con:property><con:name>txt_CidentificationCode</con:name><con:value/></con:property><con:property><con:name>txt_CaeoNumber</con:name><con:value/></con:property><con:property><con:name>txt_CcontactName</con:name><con:value/></con:property><con:property><con:name>txt_CcontactPhone</con:name><con:value/></con:property><con:property><con:name>txt_productCode</con:name><con:value/></con:property><con:property><con:name>txt_grossWeight</con:name><con:value/></con:property><con:property><con:name>txt_pieceDisplay</con:name><con:value/></con:property><con:property><con:name>txt_specialHandlingCodes</con:name><con:value/></con:property><con:property><con:name>txt_flightDate</con:name><con:value/></con:property><con:property><con:name>txt_flightNumber</con:name><con:value/></con:property><con:property><con:name>txt_volume</con:name><con:value/></con:property><con:property><con:name>txt_shipmentPieces</con:name><con:value/></con:property><con:property><con:name>BookingInformation</con:name><con:value>AllotmentByFlight</con:value></con:property><con:property><con:name>Retrieve</con:name><con:value/></con:property><con:property><con:name>https://uwsqa.uesc.com/lms-adapter/booking/create</con:name><con:value>https://uwsqa.uesc.com/lms-adapter/booking/create</con:value></con:property><con:property><con:name>ADPTRSCRIPT</con:name><con:value/></con:property><con:property><con:name>001</con:name><con:value/></con:property><con:property><con:name>MSP</con:name><con:value/></con:property><con:property><con:name>115</con:name><con:value/></con:property><con:property><con:name>ORD</con:name><con:value/></con:property><con:property><con:name>MOHAMED.K@IN.UNISYS.COM</con:name><con:value/></con:property><con:property><con:name>D</con:name><con:value/></con:property><con:property><con:name>NVD</con:name><con:value/></con:property><con:property><con:name>200</con:name><con:value/></con:property><con:property><con:name>140.25</con:name><con:value/></con:property><con:property><con:name>CF</con:name><con:value/></con:property><con:property><con:name>PP</con:name><con:value/></con:property><con:property><con:name>LB</con:name><con:value/></con:property><con:property><con:name>AV</con:name><con:value/></con:property><con:property><con:name>00000556665556</con:name><con:value/></con:property><con:property><con:name>3199 PILOT KNOB ROAD</con:name><con:value/></con:property><con:property><con:name>EAGAN</con:name><con:value/></con:property><con:property><con:name>US</con:name><con:value/></con:property><con:property><con:name>612-687-2272</con:name><con:value/></con:property><con:property><con:name>55121</con:name><con:value/></con:property><con:property><con:name>MN</con:name><con:value/></con:property><con:property><con:name>UNISYS AIRLINE OPERATIONS</con:name><con:value/></con:property><con:property><con:name>26003047005</con:name><con:value/></con:property><con:property><con:name>CIK</con:name><con:value/></con:property><con:property><con:name>AEO111</con:name><con:value/></con:property><con:property><con:name>BRADY</con:name><con:value/></con:property><con:property><con:name>123123123231231</con:name><con:value/></con:property><con:property><con:name>00000131313131</con:name><con:value/></con:property><con:property><con:name>3678 AXNES ROAD</con:name><con:value/></con:property><con:property><con:name>NEW YORK</con:name><con:value/></con:property><con:property><con:name>612-333-4444</con:name><con:value/></con:property><con:property><con:name>44811</con:name><con:value/></con:property><con:property><con:name>NY</con:name><con:value/></con:property><con:property><con:name>UNISYS</con:name><con:value/></con:property><con:property><con:name>26003046005</con:name><con:value/></con:property><con:property><con:name>NOR</con:name><con:value/></con:property><con:property><con:name>20</con:name><con:value/></con:property><con:property><con:name>ECC</con:name><con:value/></con:property><con:property><con:name>2020-09-30</con:name><con:value/></con:property><con:property><con:name>UW7500</con:name><con:value/></con:property><con:property><con:name>Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJQcm9maWxlSWQiOiJaIiwiQWxsb3dlZCBTdGF0aW9ucyI6WyJBTEwiXSwic3ViIjoiQURQVFJTQ1JJUFQiLCJUZW5hbnQiOiJVVyIsIlBhcmFtZXRlcnMiOnsiRVMkQlBNX0FGVEVSX0dPT0RTX0FDQ0VQVEFOQ0UiOiJZIiwiRVMkQlBNX0JFRk9SRV9HT09EU19BQ0NFUFRBTkNFIjoiWSJ9LCJNZW51IEFjY2VzcyBQZXJtaXNzaW9ucyI6WzIsMiwyLDIsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDAsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwwLDIsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwwLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDAsMiwwLDAsMiwyLDAsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyXSwiaXNzIjoiaHR0cHM6Ly91d3NxYS51ZXNjLmNvbSIsIkFnZW50SWQiOiIyNTc5IiwiZXhwIjoxNjAxNTYzMzUxLCJpYXQiOjE2MDE1NDg5NTEsIlJlc3RyaWN0aW9ucyI6IjAwMDAwMDAwIiwiVXNlckxldmVscyI6IllZWVlZWVlZTk5ZWSJ9.U9RzjGa0UqVebzoHgFFhAEVm_v7NeQhFnuaJ4pwelP1d3XMohX5CcJy7rOO_elFN_vQFd0yG_uCetLUQscTkUg</con:name><con:value/></con:property><con:property><con:name>X272523</con:name><con:value/></con:property><con:property><con:name>2020-10-05</con:name><con:value/></con:property><con:property><con:name>Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJQcm9maWxlSWQiOiJaUyIsIkFsbG93ZWQgU3RhdGlvbnMiOlsiQUxMIl0sInN1YiI6IlgyNzI1MjMiLCJUZW5hbnQiOiJVVyIsIlBhcmFtZXRlcnMiOnsiRVMkQlBNX0FGVEVSX0dPT0RTX0FDQ0VQVEFOQ0UiOiJZIiwiRVMkQlBNX0JFRk9SRV9HT09EU19BQ0NFUFRBTkNFIjoiWSJ9LCJNZW51IEFjY2VzcyBQZXJtaXNzaW9ucyI6WzIsMiwyLDIsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDAsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMCwyLDIsMCwwLDIsMiwwLDAsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwwLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwwLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwwLDAsMiwwLDAsMiwyLDAsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMCwyLDIsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDIsMCwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMCwyLDIsMiwwXSwiaXNzIjoiaHR0cHM6Ly91d3NxYS51ZXNjLmNvbSIsIkFnZW50SWQiOiIxMTUiLCJleHAiOjE2MDE4OTM1MDYsImlhdCI6MTYwMTg3OTEwNiwiUmVzdHJpY3Rpb25zIjoiMDAwMDAwMDAiLCJVc2VyTGV2ZWxzIjoiWVlZWVlZWVlOTllOIn0.AXgGJN7Dvrg8dPqLurqBl30KcrrWISj-p5GKdrcwg2fKBoQDyvsotEGmpE-A-eCCLDG9CdfcYx2rTseQ-KxeIw</con:name><con:value/></con:property><con:property><con:name>Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJQcm9maWxlSWQiOiJaUyIsIkFsbG93ZWQgU3RhdGlvbnMiOlsiQUxMIl0sInN1YiI6IlgyNzI1MjMiLCJUZW5hbnQiOiJVVyIsIlBhcmFtZXRlcnMiOnsiRVMkQlBNX0FGVEVSX0dPT0RTX0FDQ0VQVEFOQ0UiOiJZIiwiRVMkQlBNX0JFRk9SRV9HT09EU19BQ0NFUFRBTkNFIjoiWSJ9LCJNZW51IEFjY2VzcyBQZXJtaXNzaW9ucyI6WzIsMiwyLDIsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDAsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMCwyLDIsMCwwLDIsMiwwLDAsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwwLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwwLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwwLDAsMiwwLDAsMiwyLDAsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMCwyLDIsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDIsMCwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMCwyLDIsMiwyXSwiaXNzIjoiaHR0cHM6Ly91d3NxYS51ZXNjLmNvbSIsIkFnZW50SWQiOiIxMTUiLCJleHAiOjE2MDE5MDQyNDcsImlhdCI6MTYwMTg4OTg0NywiUmVzdHJpY3Rpb25zIjoiMDAwMDAwMDAiLCJVc2VyTGV2ZWxzIjoiWVlZWVlZWVlOTllOIn0.EWtcnahMCDJLYOlsTMmsFyzbyHZDR89Q6XlWJNa7yD0Xo_vKOFDD_wG10Yuy3K_Kpy_x1JZ4JTtJoVHz-V0S0Q</con:name><con:value/></con:property><con:property><con:name>Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJQcm9maWxlSWQiOiJaUyIsIkFsbG93ZWQgU3RhdGlvbnMiOlsiQUxMIl0sInN1YiI6IlgyNzI1MjMiLCJUZW5hbnQiOiJVVyIsIlBhcmFtZXRlcnMiOnsiRVMkQlBNX0FGVEVSX0dPT0RTX0FDQ0VQVEFOQ0UiOiJZIiwiRVMkQlBNX0JFRk9SRV9HT09EU19BQ0NFUFRBTkNFIjoiWSJ9LCJNZW51IEFjY2VzcyBQZXJtaXNzaW9ucyI6WzIsMiwyLDIsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDAsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMCwyLDIsMCwwLDIsMiwwLDAsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwwLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwwLDAsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDAsMCwyLDIsMiwwLDAsMiwwLDAsMiwyLDAsMiwyLDAsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMCwyLDIsMCwyLDIsMiwwLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMiwyLDIsMCwwLDAsMCwyLDIsMiwyLDIsMCwyLDIsMiwyLDAsMiwyLDIsMiwyLDIsMCwyLDIsMiwyXSwiaXNzIjoiaHR0cHM6Ly91d3NxYS51ZXNjLmNvbSIsIkFnZW50SWQiOiIxMTUiLCJleHAiOjE2MDE5ODIyNzAsImlhdCI6MTYwMTk2Nzg3MCwiUmVzdHJpY3Rpb25zIjoiMDAwMDAwMDAiLCJVc2VyTGV2ZWxzIjoiWVlZWVlZWVlOTllOIn0.R5ezLECN-lasTUVuu72vsmCa8aLDunHzrT95CBV2q_-mIgjOZeKUF5mecZTGOeLQntO31VWqC9kaR5IBXowu0g</con:name><con:value/></con:property><con:property><con:name>2020-10-06</con:name><con:value/></con:property><con:property><con:name>Allotment for Flight</con:name><con:value/></con:property><con:property><con:name>http://hseau270-lmsfwd.uesc.com/lms-adapter/station/controlinfo</con:name><con:value/></con:property><con:property><con:name>LHR</con:name><con:value/></con:property><con:property><con:name>A</con:name><con:value/></con:property><con:property><con:name>https://uwsqa.uesc.com/ReactTestTkn.asp</con:name><con:value/></con:property><con:property><con:name>http://hseau270-lmsfwd.uesc.com/lms-auth-service/api/login</con:name><con:value/></con:property><con:property><con:name>UW</con:name><con:value/></con:property><con:property><con:name>http://hseau269-lmsfwd.uesc.com/lms-adapter/station/controlinfo</con:name><con:value/></con:property><con:property><con:name>http://hseau269-lmsfwd.uesc.com/lms-auth-service/api/login</con:name><con:value/></con:property><con:property><con:name>Container Information Retrieve</con:name><con:value/></con:property><con:property><con:name>http://hseau269-lmsfwd.uesc.com/lms-adapter/containerInfo/retrieve</con:name><con:value/></con:property><con:property><con:name>AKE1234UW</con:name><con:value/></con:property><con:property><con:name>$%AGHJ</con:name><con:value/></con:property><con:property><con:name>AKE1214UW</con:name><con:value/></con:property><con:property><con:name/><con:value/></con:property></con:properties></con:testSuite><con:restMockService id="92fb0d29-2b71-4d48-93e1-7791ed7c58a2" port="8089" path="/" host="LT-34679A" name="REST MockService 1"><con:settings/><con:properties/><con:restMockAction name="/" method="POST" resourcePath="/BKG1" id="65c93c94-c9d8-449b-b7d4-bbcf1ccfd43e"><con:settings/><con:defaultResponse xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="4ecd10fc-745f-4e54-bf30-340b073e24b0" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "codeMessages": [
        {
            "code": "P539",
            "message": "Shipment Ref Required"
        }
    ],
   "splHandlingCodeDtos": [],
    "success": false,
    "disableAll": false,
    "disableSelected": false,
    "awbOnQueue": false,
    "hawbStations": {},
    "originCreditCardOnFile": false,
    "destinatationCreditCardOnFile": false
}</con:responseContent></con:response></con:restMockAction><con:restMockAction name="/BKG3" method="POST" resourcePath="/BKG3" id="4fa2e2d1-bf0d-4a22-b867-ec20b74332fb"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="e2a1f284-c3f0-46b4-b91f-870002d85dc9" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent>{
    "codeMessages": [],
    "airwaybillDto": {
        "version": 6,
        "airWaybillNumber": {
            "airlineCodeNbr": "777",
            "shipmentReference": "00005051",
            "uldInputRequired": false,
            "checkPrintTransferManifest": false,
            "numberDefined": true,
            "shipmentReferenceWithMod": "00005051",
            "awbNumberWithoutHyphen": "77700005051"
        },
        "arrivalFlight": {},
        "awbDetail": {
            "version": 0,
            "accountingDetailDto": {
                "erReopenInd": false,
                "irReopenInd": false
            },
            "airlineHoldInd": false,
            "awbDeletionInd": false,
            "awbGeneratedDetailDto": {
                "assignInd": false,
                "awbPrintIndicator": false,
                "collectChargesResInd": false,
                "eqaLockingAuthorityIndicator": false,
                "fieldChangeInd": false,
                "inBondIndicator": false,
                "lockedIndicator": false,
                "manualAuditInd": false,
                "rateLockInd": false,
                "readyforDeliveryInd": false,
                "sendAWBtoAccInd": false
            },
            "awbKeyDatesDto": {
                "checkForSameTransaction": false
            },
            "awbPrintIndicator": false,
            "awbPriority": "2",
            "awbRetainIndicator": false,
            "awbStatuses": [],
            "brlStatus": 0,
            "codCashPaymentInd": false,
            "contractSraApply": false,
            "awbReviewedbyUserIndicator": "N",
            "destinationCurrency": "EUR",
            "documentReceivedInd": false,
            "domesticChineseAWBIndicator": false,
            "exportPaycode": "PP",
            "finalFWBStatus": false,
            "fsuNoActionType": false,
            "gameChangerInd": 0,
            "gblStatus": 0,
            "importPaycode": "CK",
            "importReportingStationPieces": 0,
            "insuranceInd": false,
            "manuallyAuditedInd": false,
            "originalPrinted": false,
            "originatedAsFwb": false,
            "originatedAsXfwb": false,
            "originCurrency": "USD",
            "paperAWBOverrideInd": false,
            "prodCNLNotAllowed": false,
            "prodUPDNotAllowed": false,
            "protGameChangerInd": 0,
            "readyForDeliveryInd": false,
            "securityDataPresent": false,
            "securityDeclarationDto": {
                "version": 0,
                "codeMessages": []
            },
            "sentAsFwb": false,
            "shipmentStatusDto": {
                "orderAcceptedInd": false,
                "orderCompleteInd": false,
                "orderExecutedInd": false,
                "orderExportedInd": false,
                "orderImportedInd": false,
                "preOrderInd": false,
                "bookingExistsInd": false,
                "bookedQuotedInd": false,
                "quotedInd": false
            },
            "genericEAWBBilateralIndicator": false,
            "eAirWaybillBilateralIndicator": false,
            "shipmentCaptureDoneAtDestination": false,
            "genericEAWBBilateralAvlblInd": false,
            "multilateralEAWBAppliedIndicator": false,
            "updateFromECSECS": false,
            "fwbVolExists": false,
            "awbDocInd": false,
            "awbnumberGenerationIndicator": false,
            "hasAlreadyAcceptedGoods": false,
            "hawbvalidate": false
        },
        "awbPaymentEntries": [],
        "awbRemarksDtos": [],
        "booking": {
            "version": 0,
            "arrivalFlight": {},
            "bookingRemarkDto": {},
            "createDuplicateBookingInd": false,
            "orderCompleted": false,
            "replySentBCTL": false,
            "userEmail": "",
            "invokedFromContextMenu": false,
            "volumeCompensationInd": false,
            "updatePricing": false,
            "bookingFeeWaivedOff": false,
            "updateFeeApplied": false,
            "deleteFeeApplied": false,
            "noShowFeeApplied": false,
            "noShowEmailSent": false,
            "otherChargeCodeSubcodeValid": false,
            "otherChargeCodeDueCarrier": false,
            "otherChargeRatesNotExist": false,
            "orderAndQuoteNotComplete": false,
            "removedSegments": [],
            "replacedSegments": [],
            "airWaybillSpecialHandlingCodes": [],
            "autoAllotmentSelection": false,
            "skipCustomerAllotment": false,
            "shipmentAcceptance": false
        },
        "bookingIndicator": false,
        "bookingSegment": {
            "version": 0,
            "advisoryIndicator": false,
            "arrivalIndicator": false,
            "assignedIndicator": false,
            "dofcDoesnotExists": false,
            "bookingSegmentRoute": {},
            "bookingWorkItemDtos": [],
            "disableFlightStatus": false,
            "operationalDetail": {
                "autoConfirmProductInd": false,
                "autoConfirmVolumeInd": false,
                "autoConfirmWeightInd": false,
                "bookingQueueSplInd": false,
                "bookingSpaceAuthority": false,
                "loadabilityCheckInd": false,
                "newDOFIndicator": false,
                "nonHandledCarrierInd": false,
                "operationalFeasibilityIndicator": false,
                "spaceAvailabilityStatusInd": false,
                "specialRequestIndicator": false,
                "splCodeRequiresFCTLConfirmationIndicator": false,
                "stationRestrictionIndicator": false,
                "toleranceInd": false,
                "smallShipmentBookingApplied": false,
                "currentSmallShipmentBookingFlag": false,
                "nonCargoOnlyFlightSPLPresentInd": false,
                "heaSplApprovalInd": false,
                "splConfirmationFBR": false,
                "toleranceWeightusedInd": false,
                "toleranceVolumeUsedInd": false
            },
            "requestedCapacity": {
                "empty": true,
                "equalOrLessThanZero": true,
                "containerRequested": false,
                "upperDeckRequested": false,
                "upperDeckEmpty": true,
                "lowerDeckEmpty": true
            },
            "ruleIndicator": false,
            "updateCategory": false,
            "allotmentReleasedStatus": false
        },
        "overrideIndicator": false,
        "noShipDiscInd": false,
        "htsCodeExists": false,
        "aClssicXmlAddress": [],
        "aHistoryMessages": [],
        "noClassicXMlMessage": false,
        "indonasianDestination": false,
        "pharmaLogEntryDtos": [],
        "cargoCorrectionAdviseDtos": [],
        "destination": "FRA",
        "ecaIndicator": false,
        "efmIndicator": false,
        "eqaLockingAuthorityIndicator": false,
        "fsdcIndicator": false,
        "goodsPiecesProcessed": 0,
        "hAWbs": [],
        "houseAirwaybills": [],
        "internationalPopupConfirm": false,
        "ccaDisplayRequired": false,
        "genrationOfCCARequired": false,
        "numberOfPages": 0,
        "oId": 56005533001,
        "origin": "MSP",
        "originAirport": "MINNEAPOLIS-ST.PAUL INTERNATIONAL",
        "destAirport": "FRANKFURT INTERNATIONAL AIRPORT",
        "otherCharges": [
            {
                "version": 0,
                "actualWeightChargesInd": false,
                "amount": 65.00,
                "changeInOtherCharge": false,
                "taxAmountGenerated": false,
                "collectInOriginCurrency": false,
                "authority": false,
                "autoIndicator": false,
                "chargeCode": "MY",
                "deleteIndicator": false,
                "description": "FUEL SURCHARGE BULK",
                "dueType": "C",
                "genIDType": "G",
                "amountNotGenerated": false,
                "regenerateOtherCharge": false,
                "userAmtEntryRequired": false,
                "disableDuetype": false,
                "styleDuetype": false,
                "miscChargeQuantity": 0,
                "nonRatingLineBasedOCIndicator": false,
                "otherChargeTaxInd": false,
                "purgeIndicator": false,
                "stationChargeApplied": false,
                "systemGeneratedOC": false,
                "subCode": "B",
                "weightChargeIndicator": false,
                "generateOCIndicator": false,
                "allInSRAAppliedInd": false
            },
            {
                "version": 0,
                "actualWeightChargesInd": false,
                "amount": 15.00,
                "changeInOtherCharge": false,
                "taxAmountGenerated": false,
                "collectInOriginCurrency": false,
                "authority": false,
                "autoIndicator": false,
                "chargeCode": "SC",
                "deleteIndicator": false,
                "description": "SECURITY CHARGE BULK",
                "dueType": "C",
                "genIDType": "G",
                "amountNotGenerated": false,
                "regenerateOtherCharge": false,
                "userAmtEntryRequired": false,
                "disableDuetype": false,
                "styleDuetype": false,
                "miscChargeQuantity": 0,
                "nonRatingLineBasedOCIndicator": false,
                "otherChargeTaxInd": false,
                "purgeIndicator": false,
                "stationChargeApplied": false,
                "systemGeneratedOC": false,
                "subCode": "B",
                "weightChargeIndicator": false,
                "generateOCIndicator": false,
                "allInSRAAppliedInd": false
            }
        ],
        "participants": [
            {
                "adhocNotificationStatus": [],
                "airwaybillRetainIndex": false,
                "automaticBrkrIndctr": false,
                "contactDetails": {
                    "address": "3678 AXNES ROAD",
                    "city": "NEW YORK",
                    "country": "US",
                    "fax": "654-654-6666",
                    "phone": "612-333-4444",
                    "postalCode": "44811",
                    "state": "NY"
                },
                "deleteIndicator": false,
                "iataAccount": "026003046005",
                "oneTimeParticipantIndicator": false,
                "participantName": "UNISYS",
                "partCheck": false,
                "participantType": "C",
                "ratingLineIndicator": false,
                "station": "JFK",
                "contactNotificationDtos": [],
                "partInfoChinaCustomsDto": {},
                "accountNoPresent": false,
                "stockParticipantInd": false,
                "disableParticipant": false,
                "dummyParticipant": false
            },
            {
                "adhocNotificationStatus": [],
                "airwaybillRetainIndex": false,
                "automaticBrkrIndctr": false,
                "contactDetails": {
                    "address": "3199 PILOT KNOB ROAD",
                    "city": "EAGAN",
                    "country": "US",
                    "phone": "612-687-2272",
                    "postalCode": "55121",
                    "state": "MN"
                },
                "deleteIndicator": false,
                "iataAccount": "026003047005",
                "oneTimeParticipantIndicator": false,
                "participantName": "UNISYS AIRLINE OPERATIONS",
                "partCheck": false,
                "participantType": "S",
                "ratingLineIndicator": false,
                "station": "MSP",
                "contactNotificationDtos": [],
                "partInfoChinaCustomsDto": {},
                "accountNoPresent": false,
                "stockParticipantInd": false,
                "disableParticipant": false,
                "dummyParticipant": false
            }
        ],
        "popupConfirm": false,
        "productCode": "NOR",
        "rateEntries": [
            {
                "version": 0,
                "deleteIndicator": false,
                "grossWeight": 100.0,
                "hasShowableSplRemarks": false,
                "uldRatingLineBased": false,
                "specialRemarksFlagF": false,
                "specialRemarksFlagP": false,
                "specialRemarksFlagA": false,
                "netNetIndicator": false,
                "pieceDisplay": "10",
                "rateLineNumber": 0,
                "ratePieces": 10,
                "rateRCPIndicator": false,
                "rateRCPNumber": 0,
                "ratingLineDescription": "TEST",
                "rlgi": false,
                "serviceLineIndicator": false,
                "shipmentDimensions": [],
                "specialRemarks": [],
                "dimensionList": []
            },
            {
                "version": 0,
                "deleteIndicator": false,
                "grossWeight": 100.0,
                "hasShowableSplRemarks": false,
                "uldRatingLineBased": false,
                "specialRemarksFlagF": false,
                "specialRemarksFlagP": false,
                "specialRemarksFlagA": false,
                "netNetIndicator": false,
                "pieceDisplay": "10",
                "rateLineNumber": 0,
                "ratePieces": 10,
                "rateRCPIndicator": false,
                "rateRCPNumber": 0,
                "ratingLineDescription": "TEST",
                "rlgi": false,
                "serviceLineIndicator": false,
                "shipmentDimensions": [],
                "specialRemarks": [],
                "dimensionList": []
            },
            {
                "version": 0,
                "deleteIndicator": false,
                "grossWeight": 100.0,
                "hasShowableSplRemarks": false,
                "uldRatingLineBased": false,
                "specialRemarksFlagF": false,
                "specialRemarksFlagP": false,
                "specialRemarksFlagA": false,
                "netNetIndicator": false,
                "pieceDisplay": "10",
                "rateLineNumber": 0,
                "ratePieces": 10,
                "rateRCPIndicator": false,
                "rateRCPNumber": 0,
                "ratingLineDescription": "TEST",
                "rlgi": false,
                "serviceLineIndicator": false,
                "shipmentDimensions": [],
                "specialRemarks": [],
                "dimensionList": []
            }
        ],
        "revenue": {
            "version": 0
        },
        "routes": [
            {
                "version": 0,
                "carrier": "UW",
                "station": "ORD",
                "onwardRoute": false
            }
        ],
        "specialHandlingCodes": [
            "ECC"
        ],
        "splswithColorCodes": {},
        "totalChargeDto": {
            "version": 0
        },
        "unNumberDtos": [],
        "feeEventTriggered": false,
        "associatedAWBList": [],
        "airwaybillChangeInd": false,
        "domestic": false,
        "onlyParticipantUpdated": false,
        "shipperUpdated": false,
        "agentUpdated": false,
        "goodsAccepted": false,
        "rulesfailed": false,
        "airWaybillSpecialHandlingCodes": [],
        "createdDateForRules": 0,
        "ruleHierarchyOrder": 0,
        "newAWBType": false,
        "newAirwaybillCreated": false,
        "manuallyAddedOtherCharge": false,
        "sapSpecialMessageOption": false,
        "checkSAPMessage": false,
        "disbleAgentParticipant": false,
        "disableActual": false,
        "checkOtherChargeAmt": false,
        "creditNotDecremented": false,
        "recordHistoryDims": false,
        "repricedUsingBookedHurdle": false,
        "weightChargesRecalculated": false,
        "hurdleLockThroughGoodsAcc": false,
        "hurdleLockThroughSDC": false,
        "hurdleRateLockInd": false,
        "requestFromECTGAC": false,
        "rcsDelayTimeIndicator": false,
        "piecesWeightMismatchInd": false,
        "shipmentAttachmentPresent": false,
        "bookingService": false,
        "oid": 56005533001
    },
    "bookingDto": {
        "version": 0,
        "arrivalFlight": {},
        "bookingCreationSource": "E",
        "bookingRemarkDto": {},
        "createDuplicateBookingInd": false,
        "orderCompleted": false,
        "oId": 56005533006,
        "replySentBCTL": false,
        "segments": [
            {
                "version": 0,
                "advisoryIndicator": false,
                "arrivalIndicator": false,
                "assignedArrivalFlight": {},
                "assignedIndicator": false,
                "dofcDoesnotExists": false,
                "bookingSegmentRoute": {
                    "destinationStation": "ORD",
                    "flightDate": 1592505000000,
                    "flightNumber": "UW1110",
                    "originStation": "MSP"
                },
                "bookingWorkItemDtos": [],
                "disableFlightStatus": false,
                "operationalDetail": {
                    "autoConfirmProductInd": false,
                    "autoConfirmVolumeInd": false,
                    "autoConfirmWeightInd": false,
                    "bookingQueueSplInd": false,
                    "bookingSpaceAuthority": false,
                    "loadabilityCheckInd": false,
                    "newDOFIndicator": false,
                    "nonHandledCarrierInd": false,
                    "operationalFeasibilityIndicator": false,
                    "spaceAvailabilityStatusInd": false,
                    "specialRequestIndicator": false,
                    "splCodeRequiresFCTLConfirmationIndicator": false,
                    "stationRestrictionIndicator": false,
                    "toleranceInd": false,
                    "smallShipmentBookingApplied": false,
                    "currentSmallShipmentBookingFlag": false,
                    "nonCargoOnlyFlightSPLPresentInd": false,
                    "heaSplApprovalInd": false,
                    "splConfirmationFBR": false,
                    "toleranceWeightusedInd": false,
                    "toleranceVolumeUsedInd": false
                },
                "requestedCapacity": {
                    "volume": 1.00,
                    "weight": 100.0,
                    "empty": false,
                    "equalOrLessThanZero": false,
                    "containerRequested": false,
                    "upperDeckRequested": false,
                    "upperDeckEmpty": true,
                    "lowerDeckEmpty": true
                },
                "shipmentPieces": 10,
                "ruleIndicator": false,
                "updateCategory": false,
                "allotmentReleasedStatus": false
            },
            {
                "version": 0,
                "advisoryIndicator": false,
                "arrivalIndicator": false,
                "assignedArrivalFlight": {},
                "assignedIndicator": false,
                "dofcDoesnotExists": false,
                "bookingSegmentRoute": {
                    "destinationStation": "FRA",
                    "flightDate": 1592505000000,
                    "flightNumber": "UW1110",
                    "originStation": "ORD"
                },
                "bookingWorkItemDtos": [],
                "disableFlightStatus": false,
                "operationalDetail": {
                    "autoConfirmProductInd": false,
                    "autoConfirmVolumeInd": false,
                    "autoConfirmWeightInd": false,
                    "bookingQueueSplInd": false,
                    "bookingSpaceAuthority": false,
                    "loadabilityCheckInd": false,
                    "newDOFIndicator": false,
                    "nonHandledCarrierInd": false,
                    "operationalFeasibilityIndicator": false,
                    "spaceAvailabilityStatusInd": false,
                    "specialRequestIndicator": false,
                    "splCodeRequiresFCTLConfirmationIndicator": false,
                    "stationRestrictionIndicator": false,
                    "toleranceInd": false,
                    "smallShipmentBookingApplied": false,
                    "currentSmallShipmentBookingFlag": false,
                    "nonCargoOnlyFlightSPLPresentInd": false,
                    "heaSplApprovalInd": false,
                    "splConfirmationFBR": false,
                    "toleranceWeightusedInd": false,
                    "toleranceVolumeUsedInd": false
                },
                "requestedCapacity": {
                    "volume": 1.00,
                    "weight": 100.0,
                    "empty": false,
                    "equalOrLessThanZero": false,
                    "containerRequested": false,
                    "upperDeckRequested": false,
                    "upperDeckEmpty": true,
                    "lowerDeckEmpty": true
                },
                "shipmentPieces": 10,
                "ruleIndicator": false,
                "updateCategory": false,
                "allotmentReleasedStatus": false
            }
        ],
        "splitBookingIndicator": "N",
        "userEmail": "",
        "invokedFromContextMenu": false,
        "volumeCompensationInd": false,
        "updatePricing": false,
        "bookingFeeWaivedOff": false,
        "updateFeeApplied": false,
        "deleteFeeApplied": false,
        "noShowFeeApplied": false,
        "noShowEmailSent": false,
        "otherChargeCodeSubcodeValid": false,
        "otherChargeCodeDueCarrier": false,
        "otherChargeRatesNotExist": false,
        "orderAndQuoteNotComplete": false,
        "removedSegments": [],
        "replacedSegments": [],
        "airWaybillSpecialHandlingCodes": [],
        "autoAllotmentSelection": false,
        "skipCustomerAllotment": false,
        "shipmentAcceptance": false,
        "oid": 56005533006
    },
    "splHandlingCodeDtos": [],
    "success": false,
    "disableAll": false,
    "disableSelected": false,
    "awbOnQueue": false,
    "hawbStations": {},
    "originCreditCardOnFile": false,
    "destinatationCreditCardOnFile": false
}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties><con:property><con:name>RUN_PATH</con:name><con:value/></con:property><con:property><con:name>pa</con:name><con:value>99</con:value></con:property><con:property><con:name>pb</con:name><con:value>11</con:value></con:property><con:property><con:name>pc</con:name><con:value>2532</con:value></con:property><con:property><con:name>pd</con:name><con:value>5565</con:value></con:property><con:property><con:name>UploadresultstoALM</con:name><con:value>N</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>Profile 1</con:name><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:beforeRunScript>project.setPropertyValue( "RUN_PATH", "" )
// Get the default value from a project property
def value = runner.project.getPropertyValue("defaultValue")
</con:beforeRunScript><con:afterRunScript>project.setPropertyValue( "RUN_PATH", "" )
</con:afterRunScript><con:sensitiveInformation/></con:soapui-project>